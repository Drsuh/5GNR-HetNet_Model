%Playground for experiments

txarray1 = phased.ConformalArray(...
    'ElementPosition',Hbuilder_SC(1,1,1).tx_array.element_position,...
    'ElementNormal',zeros(2,64));

viewArray(txarray1)

txarray2 = phased.PartitionedArray(...
    'Array',txarray1,...
    'SubarraySelection',ones(1,64),...
    'SubarraySteering','Custom');

viewArray(txarray2)

%conformal array
pattern(txarray1,fc,[-180:180],-90:90,...
    'PropagationSpeed',3e8,...
    'Type','powerdb',...
    'Weights',Frf'*Fbb',...
    'CoordinateSystem','polar');

% The beam pattern of the hybrid weights is shown below
pattern(txarray2,fc,-90:90,-90:90,...
    'Type','efield',...
    'ElementWeights',Frf'*Fbb',...
    'PropagationSpeed',3e8);



txarray1_BS = phased.ConformalArray(...
    'ElementPosition',lay.tx_array(1).element_position,...
    'ElementNormal',ones(2,100)*45);

viewArray(txarray1_BS)

txarray2_BS = phased.PartitionedArray(...
    'Array',txarray1_BS,...
    'SubarraySelection',ones(1,100),...
    'SubarraySteering','Custom');

viewArray(txarray2_BS)

%conformal array
pattern(txarray1_BS,fc,[-180:180],-90:90,...
    'PropagationSpeed',c,...
    'Type','powerdb',...
    'Weights',Frf'*Fbb',...
    'CoordinateSystem','polar');

% The beam pattern of the hybrid weights is shown below
pattern(txarray2_BS,fc,-90:90,-90:90,...
    'Type','efield',...
    'ElementWeights',Frf'*Fbb',...
    'PropagationSpeed',c);







for l = 1:L
    for k = 1:SCdrop
        k_upd = UEindex_rnd(SCindex(k,l),l);
        l_upd = UEbestBS_rnd(SCindex(k,l),l);
        SCindex_rnd(k_upd,l_upd) = SCdrop*(l-1)+k;
    end
end





LastName = {'Sanchez';'Johnson';'Li';'Diaz';'Brown'};
Age = [38;43;38;40;49];
Smoker = logical([1;0;1;0;1]);
Height = [71;69;64;67;64];
Weight = [176;163;131;133;119];
BloodPressure = [124 93; 109 77; 125 83; 117 75; 122 80];

T = table(LastName,Age,Smoker,Height,Weight,BloodPressure)

figure(66);
uitable('Data',T{:,:},'ColumnName',T.Properties.VariableNames,...
    'RowName',T.Properties.RowNames,'Units', 'Normalized', 'Position',[0, 0, 1, 1]);



f = figure(67);
uit = uitable(f);
uit.ColumnName = {'Set of UEs','Median DL throughput','Median UL throughput'};
uit.Data = {'Macro: all UEs',median((B_effective/1e6)*SE_DL_active),median((B_effective/1e6)*SE_UL_active);...
    'Macro: non-backhaul UEs',median((B_effective/1e6)*SE_DL_nonbh_active),median((B_effective/1e6)*SE_UL_nonbh_active);...
    'Macro: backhaul UEs',median((B_effective/1e6)*SE_DL_bh_active),median((B_effective/1e6)*SE_UL_bh_active);...
    'Small cell UEs',median((B_effective_SC/1e6)*SE_DL_SC_active),median((B_effective_SC/1e6)*SE_UL_SC_active);...
    'Small cell UEs: scaled',median((B_effective_SC/1e6)*SE_DL_SC_scaled_active),median((B_effective_SC/1e6)*SE_UL_SC_scaled_active);...
    };
uit.Position = [20 20 500 350];
uit.ColumnWidth = {150,150,150};


%Plot statistics: area throughputs, 2-layer system
f = figure(69);
set(f,'Position', [200 200 900 400]);
uit = uitable(f);
uit.ColumnName = {'DL/UL','Total area throughput - non-scaled',...
    'Total area throughput - scaled','Capacity loss due to scaling, %'};
uit.Data = {'DL',...
    (sum(TP_DL_total(:))+sum(TP_DL_SC_total(:))),...
    (sum(TP_DL_total(:))+sum(TP_DL_SC_total_scaled(:))),...
    (1 - (sum(TP_DL_total(:))+sum(TP_DL_SC_total_scaled(:)))/...
    (sum(TP_DL_total(:))+sum(TP_DL_SC_total(:))))*100;...
    'UL',...
    sum(TP_UL_total(:))+sum(TP_UL_SC_total(:)),...
    sum(TP_UL_total(:))+sum(TP_UL_SC_total_scaled(:)),...
    (1 - (sum(TP_UL_total(:))+sum(TP_UL_SC_total_scaled(:)))/...
    (sum(TP_UL_total(:))+sum(TP_UL_SC_total(:))))*100;...
    };
uit.Position = [20 20 860 360];
uit.ColumnWidth = {200,150,150,150};
